{"ast":null,"code":"var set = require('regenerate')(0x19BA, 0xAAB9);\n\nset.addRange(0xE40, 0xE44).addRange(0xEC0, 0xEC4).addRange(0x19B5, 0x19B7).addRange(0xAAB5, 0xAAB6).addRange(0xAABB, 0xAABC);\nmodule.exports = set;","map":{"version":3,"names":["set","require","addRange","module","exports"],"sources":["E:/ReactJS/project-cursus/node_modules/regenerate-unicode-properties/Binary_Property/Logical_Order_Exception.js"],"sourcesContent":["const set = require('regenerate')(0x19BA, 0xAAB9);\nset.addRange(0xE40, 0xE44).addRange(0xEC0, 0xEC4).addRange(0x19B5, 0x19B7).addRange(0xAAB5, 0xAAB6).addRange(0xAABB, 0xAABC);\nmodule.exports = set;\n"],"mappings":"AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsB,MAAtB,EAA8B,MAA9B,CAAZ;;AACAD,GAAG,CAACE,QAAJ,CAAa,KAAb,EAAoB,KAApB,EAA2BA,QAA3B,CAAoC,KAApC,EAA2C,KAA3C,EAAkDA,QAAlD,CAA2D,MAA3D,EAAmE,MAAnE,EAA2EA,QAA3E,CAAoF,MAApF,EAA4F,MAA5F,EAAoGA,QAApG,CAA6G,MAA7G,EAAqH,MAArH;AACAC,MAAM,CAACC,OAAP,GAAiBJ,GAAjB"},"metadata":{},"sourceType":"script"}