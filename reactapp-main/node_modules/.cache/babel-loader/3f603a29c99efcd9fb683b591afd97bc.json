{"ast":null,"code":"\"use strict\";\n/* global global */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar KEYCODE_ENTER = 13;\nvar KEYCODE_TAB = 9;\nvar KEYCODE_BACKSPACE = 8;\nvar KEYCODE_Y = 89;\nvar KEYCODE_Z = 90;\nvar KEYCODE_M = 77;\nvar KEYCODE_PARENS = 57;\nvar KEYCODE_BRACKETS = 219;\nvar KEYCODE_QUOTE = 222;\nvar KEYCODE_BACK_QUOTE = 192;\nvar KEYCODE_ESCAPE = 27;\nvar HISTORY_LIMIT = 100;\nvar HISTORY_TIME_GAP = 3000;\nvar isWindows = 'navigator' in global && /Win/i.test(navigator.platform);\nvar isMacLike = 'navigator' in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\nvar className = 'npm__react-simple-code-editor__textarea';\nvar cssText =\n/* CSS */\n\"\\n/**\\n * Reset the text fill color so that placeholder is visible\\n */\\n.\".concat(className, \":empty {\\n  -webkit-text-fill-color: inherit !important;\\n}\\n\\n/**\\n * Hack to apply on some CSS on IE10 and IE11\\n */\\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\\n  /**\\n    * IE doesn't support '-webkit-text-fill-color'\\n    * So we use 'color: transparent' to make the text transparent on IE\\n    * Unlike other browsers, it doesn't affect caret color in IE\\n    */\\n  .\").concat(className, \" {\\n    color: transparent !important;\\n  }\\n\\n  .\").concat(className, \"::selection {\\n    background-color: #accef7 !important;\\n    color: transparent !important;\\n  }\\n}\\n\");\n\nvar Editor =\n/** @class */\nfunction (_super) {\n  __extends(Editor, _super);\n\n  function Editor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      capture: true\n    };\n\n    _this._recordCurrentState = function () {\n      var input = _this._input;\n      if (!input) return; // Save current state of the input\n\n      var value = input.value,\n          selectionStart = input.selectionStart,\n          selectionEnd = input.selectionEnd;\n\n      _this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      });\n    };\n\n    _this._getLines = function (text, position) {\n      return text.substring(0, position).split('\\n');\n    };\n\n    _this._recordChange = function (record, overwrite) {\n      var _a, _b, _c;\n\n      if (overwrite === void 0) {\n        overwrite = false;\n      }\n\n      var _d = _this._history,\n          stack = _d.stack,\n          offset = _d.offset;\n\n      if (stack.length && offset > -1) {\n        // When something updates, drop the redo operations\n        _this._history.stack = stack.slice(0, offset + 1); // Limit the number of operations to 100\n\n        var count = _this._history.stack.length;\n\n        if (count > HISTORY_LIMIT) {\n          var extras = count - HISTORY_LIMIT;\n          _this._history.stack = stack.slice(extras, count);\n          _this._history.offset = Math.max(_this._history.offset - extras, 0);\n        }\n      }\n\n      var timestamp = Date.now();\n\n      if (overwrite) {\n        var last = _this._history.stack[_this._history.offset];\n\n        if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n          // A previous entry exists and was in short interval\n          // Match the last word in the line\n          var re = /[^a-z0-9]([a-z0-9]+)$/i; // Get the previous line\n\n          var previous = (_a = _this._getLines(last.value, last.selectionStart).pop()) === null || _a === void 0 ? void 0 : _a.match(re); // Get the current line\n\n          var current = (_b = _this._getLines(record.value, record.selectionStart).pop()) === null || _b === void 0 ? void 0 : _b.match(re);\n\n          if ((previous === null || previous === void 0 ? void 0 : previous[1]) && ((_c = current === null || current === void 0 ? void 0 : current[1]) === null || _c === void 0 ? void 0 : _c.startsWith(previous[1]))) {\n            // The last word of the previous line and current line match\n            // Overwrite previous entry so that undo will remove whole word\n            _this._history.stack[_this._history.offset] = __assign(__assign({}, record), {\n              timestamp: timestamp\n            });\n            return;\n          }\n        }\n      } // Add the new operation to the stack\n\n\n      _this._history.stack.push(__assign(__assign({}, record), {\n        timestamp: timestamp\n      }));\n\n      _this._history.offset++;\n    };\n\n    _this._updateInput = function (record) {\n      var input = _this._input;\n      if (!input) return; // Update values and selection state\n\n      input.value = record.value;\n      input.selectionStart = record.selectionStart;\n      input.selectionEnd = record.selectionEnd;\n\n      _this.props.onValueChange(record.value);\n    };\n\n    _this._applyEdits = function (record) {\n      // Save last selection state\n      var input = _this._input;\n      var last = _this._history.stack[_this._history.offset];\n\n      if (last && input) {\n        _this._history.stack[_this._history.offset] = __assign(__assign({}, last), {\n          selectionStart: input.selectionStart,\n          selectionEnd: input.selectionEnd\n        });\n      } // Save the changes\n\n\n      _this._recordChange(record);\n\n      _this._updateInput(record);\n    };\n\n    _this._undoEdit = function () {\n      var _a = _this._history,\n          stack = _a.stack,\n          offset = _a.offset; // Get the previous edit\n\n      var record = stack[offset - 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        _this._updateInput(record);\n\n        _this._history.offset = Math.max(offset - 1, 0);\n      }\n    };\n\n    _this._redoEdit = function () {\n      var _a = _this._history,\n          stack = _a.stack,\n          offset = _a.offset; // Get the next edit\n\n      var record = stack[offset + 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        _this._updateInput(record);\n\n        _this._history.offset = Math.min(offset + 1, stack.length - 1);\n      }\n    };\n\n    _this._handleKeyDown = function (e) {\n      var _a = _this.props,\n          tabSize = _a.tabSize,\n          insertSpaces = _a.insertSpaces,\n          ignoreTabKey = _a.ignoreTabKey,\n          onKeyDown = _a.onKeyDown;\n\n      if (onKeyDown) {\n        onKeyDown(e);\n\n        if (e.defaultPrevented) {\n          return;\n        }\n      }\n\n      if (e.keyCode === KEYCODE_ESCAPE) {\n        e.currentTarget.blur();\n      }\n\n      var _b = e.currentTarget,\n          value = _b.value,\n          selectionStart = _b.selectionStart,\n          selectionEnd = _b.selectionEnd;\n      var tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n\n      if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && _this.state.capture) {\n        // Prevent focus change\n        e.preventDefault();\n\n        if (e.shiftKey) {\n          // Unindent selected lines\n          var linesBeforeCaret = _this._getLines(value, selectionStart);\n\n          var startLine_1 = linesBeforeCaret.length - 1;\n          var endLine_1 = _this._getLines(value, selectionEnd).length - 1;\n          var nextValue = value.split('\\n').map(function (line, i) {\n            if (i >= startLine_1 && i <= endLine_1 && line.startsWith(tabCharacter)) {\n              return line.substring(tabCharacter.length);\n            }\n\n            return line;\n          }).join('\\n');\n\n          if (value !== nextValue) {\n            var startLineText = linesBeforeCaret[startLine_1];\n\n            _this._applyEdits({\n              value: nextValue,\n              // Move the start cursor if first line in selection was modified\n              // It was modified only if it started with a tab\n              selectionStart: (startLineText === null || startLineText === void 0 ? void 0 : startLineText.startsWith(tabCharacter)) ? selectionStart - tabCharacter.length : selectionStart,\n              // Move the end cursor by total number of characters removed\n              selectionEnd: selectionEnd - (value.length - nextValue.length)\n            });\n          }\n        } else if (selectionStart !== selectionEnd) {\n          // Indent selected lines\n          var linesBeforeCaret = _this._getLines(value, selectionStart);\n\n          var startLine_2 = linesBeforeCaret.length - 1;\n          var endLine_2 = _this._getLines(value, selectionEnd).length - 1;\n          var startLineText = linesBeforeCaret[startLine_2];\n\n          _this._applyEdits({\n            value: value.split('\\n').map(function (line, i) {\n              if (i >= startLine_2 && i <= endLine_2) {\n                return tabCharacter + line;\n              }\n\n              return line;\n            }).join('\\n'),\n            // Move the start cursor by number of characters added in first line of selection\n            // Don't move it if it there was no text before cursor\n            selectionStart: startLineText && /\\S/.test(startLineText) ? selectionStart + tabCharacter.length : selectionStart,\n            // Move the end cursor by total number of characters added\n            selectionEnd: selectionEnd + tabCharacter.length * (endLine_2 - startLine_2 + 1)\n          });\n        } else {\n          var updatedSelection = selectionStart + tabCharacter.length;\n\n          _this._applyEdits({\n            // Insert tab character at caret\n            value: value.substring(0, selectionStart) + tabCharacter + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_BACKSPACE) {\n        var hasSelection = selectionStart !== selectionEnd;\n        var textBeforeCaret = value.substring(0, selectionStart);\n\n        if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n          // Prevent default delete behaviour\n          e.preventDefault();\n          var updatedSelection = selectionStart - tabCharacter.length;\n\n          _this._applyEdits({\n            // Remove tab character at caret\n            value: value.substring(0, selectionStart - tabCharacter.length) + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_ENTER) {\n        // Ignore selections\n        if (selectionStart === selectionEnd) {\n          // Get the current line\n          var line = _this._getLines(value, selectionStart).pop();\n\n          var matches = line === null || line === void 0 ? void 0 : line.match(/^\\s+/);\n\n          if (matches === null || matches === void 0 ? void 0 : matches[0]) {\n            e.preventDefault(); // Preserve indentation on inserting a new line\n\n            var indent = '\\n' + matches[0];\n            var updatedSelection = selectionStart + indent.length;\n\n            _this._applyEdits({\n              // Insert indentation character at caret\n              value: value.substring(0, selectionStart) + indent + value.substring(selectionEnd),\n              // Update caret position\n              selectionStart: updatedSelection,\n              selectionEnd: updatedSelection\n            });\n          }\n        }\n      } else if (e.keyCode === KEYCODE_PARENS || e.keyCode === KEYCODE_BRACKETS || e.keyCode === KEYCODE_QUOTE || e.keyCode === KEYCODE_BACK_QUOTE) {\n        var chars = void 0;\n\n        if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n          chars = ['(', ')'];\n        } else if (e.keyCode === KEYCODE_BRACKETS) {\n          if (e.shiftKey) {\n            chars = ['{', '}'];\n          } else {\n            chars = ['[', ']'];\n          }\n        } else if (e.keyCode === KEYCODE_QUOTE) {\n          if (e.shiftKey) {\n            chars = ['\"', '\"'];\n          } else {\n            chars = [\"'\", \"'\"];\n          }\n        } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n          chars = ['`', '`'];\n        } // If text is selected, wrap them in the characters\n\n\n        if (selectionStart !== selectionEnd && chars) {\n          e.preventDefault();\n\n          _this._applyEdits({\n            value: value.substring(0, selectionStart) + chars[0] + value.substring(selectionStart, selectionEnd) + chars[1] + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd + 2\n          });\n        }\n      } else if ((isMacLike ? // Trigger undo with ⌘+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z : // Trigger undo with Ctrl+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z) && !e.shiftKey && !e.altKey) {\n        e.preventDefault();\n\n        _this._undoEdit();\n      } else if ((isMacLike ? // Trigger redo with ⌘+Shift+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey : isWindows ? // Trigger redo with Ctrl+Y on Windows\n      e.ctrlKey && e.keyCode === KEYCODE_Y : // Trigger redo with Ctrl+Shift+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) && !e.altKey) {\n        e.preventDefault();\n\n        _this._redoEdit();\n      } else if (e.keyCode === KEYCODE_M && e.ctrlKey && (isMacLike ? e.shiftKey : true)) {\n        e.preventDefault(); // Toggle capturing tab key so users can focus away\n\n        _this.setState(function (state) {\n          return {\n            capture: !state.capture\n          };\n        });\n      }\n    };\n\n    _this._handleChange = function (e) {\n      var _a = e.currentTarget,\n          value = _a.value,\n          selectionStart = _a.selectionStart,\n          selectionEnd = _a.selectionEnd;\n\n      _this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      }, true);\n\n      _this.props.onValueChange(value);\n    };\n\n    _this._history = {\n      stack: [],\n      offset: -1\n    };\n    _this._input = null;\n    return _this;\n  }\n\n  Editor.prototype.componentDidMount = function () {\n    this._recordCurrentState();\n  };\n\n  Object.defineProperty(Editor.prototype, \"session\", {\n    get: function () {\n      return {\n        history: this._history\n      };\n    },\n    set: function (session) {\n      this._history = session.history;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Editor.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        value = _a.value,\n        style = _a.style,\n        padding = _a.padding,\n        highlight = _a.highlight,\n        textareaId = _a.textareaId,\n        textareaClassName = _a.textareaClassName,\n        autoFocus = _a.autoFocus,\n        disabled = _a.disabled,\n        form = _a.form,\n        maxLength = _a.maxLength,\n        minLength = _a.minLength,\n        name = _a.name,\n        placeholder = _a.placeholder,\n        readOnly = _a.readOnly,\n        required = _a.required,\n        onClick = _a.onClick,\n        onFocus = _a.onFocus,\n        onBlur = _a.onBlur,\n        onKeyUp = _a.onKeyUp,\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    onKeyDown = _a.onKeyDown,\n        onValueChange = _a.onValueChange,\n        tabSize = _a.tabSize,\n        insertSpaces = _a.insertSpaces,\n        ignoreTabKey = _a.ignoreTabKey,\n\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    preClassName = _a.preClassName,\n        rest = __rest(_a, [\"value\", \"style\", \"padding\", \"highlight\", \"textareaId\", \"textareaClassName\", \"autoFocus\", \"disabled\", \"form\", \"maxLength\", \"minLength\", \"name\", \"placeholder\", \"readOnly\", \"required\", \"onClick\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onValueChange\", \"tabSize\", \"insertSpaces\", \"ignoreTabKey\", \"preClassName\"]);\n\n    var contentStyle = {\n      paddingTop: padding,\n      paddingRight: padding,\n      paddingBottom: padding,\n      paddingLeft: padding\n    };\n    var highlighted = highlight(value);\n    return React.createElement(\"div\", __assign({}, rest, {\n      style: __assign(__assign({}, styles.container), style)\n    }), React.createElement(\"textarea\", {\n      ref: function (c) {\n        return _this._input = c;\n      },\n      style: __assign(__assign(__assign({}, styles.editor), styles.textarea), contentStyle),\n      className: className + (textareaClassName ? \" \".concat(textareaClassName) : ''),\n      id: textareaId,\n      value: value,\n      onChange: this._handleChange,\n      onKeyDown: this._handleKeyDown,\n      onClick: onClick,\n      onKeyUp: onKeyUp,\n      onFocus: onFocus,\n      onBlur: onBlur,\n      disabled: disabled,\n      form: form,\n      maxLength: maxLength,\n      minLength: minLength,\n      name: name,\n      placeholder: placeholder,\n      readOnly: readOnly,\n      required: required,\n      autoFocus: autoFocus,\n      autoCapitalize: \"off\",\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      spellCheck: false,\n      \"data-gramm\": false\n    }), React.createElement(\"pre\", __assign({\n      className: preClassName,\n      \"aria-hidden\": \"true\",\n      style: __assign(__assign(__assign({}, styles.editor), styles.highlight), contentStyle)\n    }, typeof highlighted === 'string' ? {\n      dangerouslySetInnerHTML: {\n        __html: highlighted + '<br />'\n      }\n    } : {\n      children: highlighted\n    })), React.createElement(\"style\", {\n      type: \"text/css\",\n      dangerouslySetInnerHTML: {\n        __html: cssText\n      }\n    }));\n  };\n\n  Editor.defaultProps = {\n    tabSize: 2,\n    insertSpaces: true,\n    ignoreTabKey: false,\n    padding: 0\n  };\n  return Editor;\n}(React.Component);\n\nexports.default = Editor;\nvar styles = {\n  container: {\n    position: 'relative',\n    textAlign: 'left',\n    boxSizing: 'border-box',\n    padding: 0,\n    overflow: 'hidden'\n  },\n  textarea: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: '100%',\n    width: '100%',\n    resize: 'none',\n    color: 'inherit',\n    overflow: 'hidden',\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitTextFillColor: 'transparent'\n  },\n  highlight: {\n    position: 'relative',\n    pointerEvents: 'none'\n  },\n  editor: {\n    margin: 0,\n    border: 0,\n    background: 'none',\n    boxSizing: 'inherit',\n    display: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontStyle: 'inherit',\n    fontVariantLigatures: 'inherit',\n    fontWeight: 'inherit',\n    letterSpacing: 'inherit',\n    lineHeight: 'inherit',\n    tabSize: 'inherit',\n    textIndent: 'inherit',\n    textRendering: 'inherit',\n    textTransform: 'inherit',\n    whiteSpace: 'pre-wrap',\n    wordBreak: 'keep-all',\n    overflowWrap: 'break-word'\n  }\n};","map":{"version":3,"sources":["../src/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/* global global */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar KEYCODE_ENTER = 13;\nvar KEYCODE_TAB = 9;\nvar KEYCODE_BACKSPACE = 8;\nvar KEYCODE_Y = 89;\nvar KEYCODE_Z = 90;\nvar KEYCODE_M = 77;\nvar KEYCODE_PARENS = 57;\nvar KEYCODE_BRACKETS = 219;\nvar KEYCODE_QUOTE = 222;\nvar KEYCODE_BACK_QUOTE = 192;\nvar KEYCODE_ESCAPE = 27;\nvar HISTORY_LIMIT = 100;\nvar HISTORY_TIME_GAP = 3000;\nvar isWindows = 'navigator' in global && /Win/i.test(navigator.platform);\nvar isMacLike = 'navigator' in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\nvar className = 'npm__react-simple-code-editor__textarea';\nvar cssText = /* CSS */ \"\\n/**\\n * Reset the text fill color so that placeholder is visible\\n */\\n.\".concat(className, \":empty {\\n  -webkit-text-fill-color: inherit !important;\\n}\\n\\n/**\\n * Hack to apply on some CSS on IE10 and IE11\\n */\\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\\n  /**\\n    * IE doesn't support '-webkit-text-fill-color'\\n    * So we use 'color: transparent' to make the text transparent on IE\\n    * Unlike other browsers, it doesn't affect caret color in IE\\n    */\\n  .\").concat(className, \" {\\n    color: transparent !important;\\n  }\\n\\n  .\").concat(className, \"::selection {\\n    background-color: #accef7 !important;\\n    color: transparent !important;\\n  }\\n}\\n\");\nvar Editor = /** @class */ (function (_super) {\n    __extends(Editor, _super);\n    function Editor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            capture: true,\n        };\n        _this._recordCurrentState = function () {\n            var input = _this._input;\n            if (!input)\n                return;\n            // Save current state of the input\n            var value = input.value, selectionStart = input.selectionStart, selectionEnd = input.selectionEnd;\n            _this._recordChange({\n                value: value,\n                selectionStart: selectionStart,\n                selectionEnd: selectionEnd,\n            });\n        };\n        _this._getLines = function (text, position) {\n            return text.substring(0, position).split('\\n');\n        };\n        _this._recordChange = function (record, overwrite) {\n            var _a, _b, _c;\n            if (overwrite === void 0) { overwrite = false; }\n            var _d = _this._history, stack = _d.stack, offset = _d.offset;\n            if (stack.length && offset > -1) {\n                // When something updates, drop the redo operations\n                _this._history.stack = stack.slice(0, offset + 1);\n                // Limit the number of operations to 100\n                var count = _this._history.stack.length;\n                if (count > HISTORY_LIMIT) {\n                    var extras = count - HISTORY_LIMIT;\n                    _this._history.stack = stack.slice(extras, count);\n                    _this._history.offset = Math.max(_this._history.offset - extras, 0);\n                }\n            }\n            var timestamp = Date.now();\n            if (overwrite) {\n                var last = _this._history.stack[_this._history.offset];\n                if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n                    // A previous entry exists and was in short interval\n                    // Match the last word in the line\n                    var re = /[^a-z0-9]([a-z0-9]+)$/i;\n                    // Get the previous line\n                    var previous = (_a = _this._getLines(last.value, last.selectionStart)\n                        .pop()) === null || _a === void 0 ? void 0 : _a.match(re);\n                    // Get the current line\n                    var current = (_b = _this._getLines(record.value, record.selectionStart)\n                        .pop()) === null || _b === void 0 ? void 0 : _b.match(re);\n                    if ((previous === null || previous === void 0 ? void 0 : previous[1]) && ((_c = current === null || current === void 0 ? void 0 : current[1]) === null || _c === void 0 ? void 0 : _c.startsWith(previous[1]))) {\n                        // The last word of the previous line and current line match\n                        // Overwrite previous entry so that undo will remove whole word\n                        _this._history.stack[_this._history.offset] = __assign(__assign({}, record), { timestamp: timestamp });\n                        return;\n                    }\n                }\n            }\n            // Add the new operation to the stack\n            _this._history.stack.push(__assign(__assign({}, record), { timestamp: timestamp }));\n            _this._history.offset++;\n        };\n        _this._updateInput = function (record) {\n            var input = _this._input;\n            if (!input)\n                return;\n            // Update values and selection state\n            input.value = record.value;\n            input.selectionStart = record.selectionStart;\n            input.selectionEnd = record.selectionEnd;\n            _this.props.onValueChange(record.value);\n        };\n        _this._applyEdits = function (record) {\n            // Save last selection state\n            var input = _this._input;\n            var last = _this._history.stack[_this._history.offset];\n            if (last && input) {\n                _this._history.stack[_this._history.offset] = __assign(__assign({}, last), { selectionStart: input.selectionStart, selectionEnd: input.selectionEnd });\n            }\n            // Save the changes\n            _this._recordChange(record);\n            _this._updateInput(record);\n        };\n        _this._undoEdit = function () {\n            var _a = _this._history, stack = _a.stack, offset = _a.offset;\n            // Get the previous edit\n            var record = stack[offset - 1];\n            if (record) {\n                // Apply the changes and update the offset\n                _this._updateInput(record);\n                _this._history.offset = Math.max(offset - 1, 0);\n            }\n        };\n        _this._redoEdit = function () {\n            var _a = _this._history, stack = _a.stack, offset = _a.offset;\n            // Get the next edit\n            var record = stack[offset + 1];\n            if (record) {\n                // Apply the changes and update the offset\n                _this._updateInput(record);\n                _this._history.offset = Math.min(offset + 1, stack.length - 1);\n            }\n        };\n        _this._handleKeyDown = function (e) {\n            var _a = _this.props, tabSize = _a.tabSize, insertSpaces = _a.insertSpaces, ignoreTabKey = _a.ignoreTabKey, onKeyDown = _a.onKeyDown;\n            if (onKeyDown) {\n                onKeyDown(e);\n                if (e.defaultPrevented) {\n                    return;\n                }\n            }\n            if (e.keyCode === KEYCODE_ESCAPE) {\n                e.currentTarget.blur();\n            }\n            var _b = e.currentTarget, value = _b.value, selectionStart = _b.selectionStart, selectionEnd = _b.selectionEnd;\n            var tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n            if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && _this.state.capture) {\n                // Prevent focus change\n                e.preventDefault();\n                if (e.shiftKey) {\n                    // Unindent selected lines\n                    var linesBeforeCaret = _this._getLines(value, selectionStart);\n                    var startLine_1 = linesBeforeCaret.length - 1;\n                    var endLine_1 = _this._getLines(value, selectionEnd).length - 1;\n                    var nextValue = value\n                        .split('\\n')\n                        .map(function (line, i) {\n                        if (i >= startLine_1 &&\n                            i <= endLine_1 &&\n                            line.startsWith(tabCharacter)) {\n                            return line.substring(tabCharacter.length);\n                        }\n                        return line;\n                    })\n                        .join('\\n');\n                    if (value !== nextValue) {\n                        var startLineText = linesBeforeCaret[startLine_1];\n                        _this._applyEdits({\n                            value: nextValue,\n                            // Move the start cursor if first line in selection was modified\n                            // It was modified only if it started with a tab\n                            selectionStart: (startLineText === null || startLineText === void 0 ? void 0 : startLineText.startsWith(tabCharacter))\n                                ? selectionStart - tabCharacter.length\n                                : selectionStart,\n                            // Move the end cursor by total number of characters removed\n                            selectionEnd: selectionEnd - (value.length - nextValue.length),\n                        });\n                    }\n                }\n                else if (selectionStart !== selectionEnd) {\n                    // Indent selected lines\n                    var linesBeforeCaret = _this._getLines(value, selectionStart);\n                    var startLine_2 = linesBeforeCaret.length - 1;\n                    var endLine_2 = _this._getLines(value, selectionEnd).length - 1;\n                    var startLineText = linesBeforeCaret[startLine_2];\n                    _this._applyEdits({\n                        value: value\n                            .split('\\n')\n                            .map(function (line, i) {\n                            if (i >= startLine_2 && i <= endLine_2) {\n                                return tabCharacter + line;\n                            }\n                            return line;\n                        })\n                            .join('\\n'),\n                        // Move the start cursor by number of characters added in first line of selection\n                        // Don't move it if it there was no text before cursor\n                        selectionStart: startLineText && /\\S/.test(startLineText)\n                            ? selectionStart + tabCharacter.length\n                            : selectionStart,\n                        // Move the end cursor by total number of characters added\n                        selectionEnd: selectionEnd + tabCharacter.length * (endLine_2 - startLine_2 + 1),\n                    });\n                }\n                else {\n                    var updatedSelection = selectionStart + tabCharacter.length;\n                    _this._applyEdits({\n                        // Insert tab character at caret\n                        value: value.substring(0, selectionStart) +\n                            tabCharacter +\n                            value.substring(selectionEnd),\n                        // Update caret position\n                        selectionStart: updatedSelection,\n                        selectionEnd: updatedSelection,\n                    });\n                }\n            }\n            else if (e.keyCode === KEYCODE_BACKSPACE) {\n                var hasSelection = selectionStart !== selectionEnd;\n                var textBeforeCaret = value.substring(0, selectionStart);\n                if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n                    // Prevent default delete behaviour\n                    e.preventDefault();\n                    var updatedSelection = selectionStart - tabCharacter.length;\n                    _this._applyEdits({\n                        // Remove tab character at caret\n                        value: value.substring(0, selectionStart - tabCharacter.length) +\n                            value.substring(selectionEnd),\n                        // Update caret position\n                        selectionStart: updatedSelection,\n                        selectionEnd: updatedSelection,\n                    });\n                }\n            }\n            else if (e.keyCode === KEYCODE_ENTER) {\n                // Ignore selections\n                if (selectionStart === selectionEnd) {\n                    // Get the current line\n                    var line = _this._getLines(value, selectionStart).pop();\n                    var matches = line === null || line === void 0 ? void 0 : line.match(/^\\s+/);\n                    if (matches === null || matches === void 0 ? void 0 : matches[0]) {\n                        e.preventDefault();\n                        // Preserve indentation on inserting a new line\n                        var indent = '\\n' + matches[0];\n                        var updatedSelection = selectionStart + indent.length;\n                        _this._applyEdits({\n                            // Insert indentation character at caret\n                            value: value.substring(0, selectionStart) +\n                                indent +\n                                value.substring(selectionEnd),\n                            // Update caret position\n                            selectionStart: updatedSelection,\n                            selectionEnd: updatedSelection,\n                        });\n                    }\n                }\n            }\n            else if (e.keyCode === KEYCODE_PARENS ||\n                e.keyCode === KEYCODE_BRACKETS ||\n                e.keyCode === KEYCODE_QUOTE ||\n                e.keyCode === KEYCODE_BACK_QUOTE) {\n                var chars = void 0;\n                if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n                    chars = ['(', ')'];\n                }\n                else if (e.keyCode === KEYCODE_BRACKETS) {\n                    if (e.shiftKey) {\n                        chars = ['{', '}'];\n                    }\n                    else {\n                        chars = ['[', ']'];\n                    }\n                }\n                else if (e.keyCode === KEYCODE_QUOTE) {\n                    if (e.shiftKey) {\n                        chars = ['\"', '\"'];\n                    }\n                    else {\n                        chars = [\"'\", \"'\"];\n                    }\n                }\n                else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n                    chars = ['`', '`'];\n                }\n                // If text is selected, wrap them in the characters\n                if (selectionStart !== selectionEnd && chars) {\n                    e.preventDefault();\n                    _this._applyEdits({\n                        value: value.substring(0, selectionStart) +\n                            chars[0] +\n                            value.substring(selectionStart, selectionEnd) +\n                            chars[1] +\n                            value.substring(selectionEnd),\n                        // Update caret position\n                        selectionStart: selectionStart,\n                        selectionEnd: selectionEnd + 2,\n                    });\n                }\n            }\n            else if ((isMacLike\n                ? // Trigger undo with ⌘+Z on Mac\n                    e.metaKey && e.keyCode === KEYCODE_Z\n                : // Trigger undo with Ctrl+Z on other platforms\n                    e.ctrlKey && e.keyCode === KEYCODE_Z) &&\n                !e.shiftKey &&\n                !e.altKey) {\n                e.preventDefault();\n                _this._undoEdit();\n            }\n            else if ((isMacLike\n                ? // Trigger redo with ⌘+Shift+Z on Mac\n                    e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey\n                : isWindows\n                    ? // Trigger redo with Ctrl+Y on Windows\n                        e.ctrlKey && e.keyCode === KEYCODE_Y\n                    : // Trigger redo with Ctrl+Shift+Z on other platforms\n                        e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) &&\n                !e.altKey) {\n                e.preventDefault();\n                _this._redoEdit();\n            }\n            else if (e.keyCode === KEYCODE_M &&\n                e.ctrlKey &&\n                (isMacLike ? e.shiftKey : true)) {\n                e.preventDefault();\n                // Toggle capturing tab key so users can focus away\n                _this.setState(function (state) { return ({\n                    capture: !state.capture,\n                }); });\n            }\n        };\n        _this._handleChange = function (e) {\n            var _a = e.currentTarget, value = _a.value, selectionStart = _a.selectionStart, selectionEnd = _a.selectionEnd;\n            _this._recordChange({\n                value: value,\n                selectionStart: selectionStart,\n                selectionEnd: selectionEnd,\n            }, true);\n            _this.props.onValueChange(value);\n        };\n        _this._history = {\n            stack: [],\n            offset: -1,\n        };\n        _this._input = null;\n        return _this;\n    }\n    Editor.prototype.componentDidMount = function () {\n        this._recordCurrentState();\n    };\n    Object.defineProperty(Editor.prototype, \"session\", {\n        get: function () {\n            return {\n                history: this._history,\n            };\n        },\n        set: function (session) {\n            this._history = session.history;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Editor.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, value = _a.value, style = _a.style, padding = _a.padding, highlight = _a.highlight, textareaId = _a.textareaId, textareaClassName = _a.textareaClassName, autoFocus = _a.autoFocus, disabled = _a.disabled, form = _a.form, maxLength = _a.maxLength, minLength = _a.minLength, name = _a.name, placeholder = _a.placeholder, readOnly = _a.readOnly, required = _a.required, onClick = _a.onClick, onFocus = _a.onFocus, onBlur = _a.onBlur, onKeyUp = _a.onKeyUp, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onKeyDown = _a.onKeyDown, onValueChange = _a.onValueChange, tabSize = _a.tabSize, insertSpaces = _a.insertSpaces, ignoreTabKey = _a.ignoreTabKey, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        preClassName = _a.preClassName, rest = __rest(_a, [\"value\", \"style\", \"padding\", \"highlight\", \"textareaId\", \"textareaClassName\", \"autoFocus\", \"disabled\", \"form\", \"maxLength\", \"minLength\", \"name\", \"placeholder\", \"readOnly\", \"required\", \"onClick\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onValueChange\", \"tabSize\", \"insertSpaces\", \"ignoreTabKey\", \"preClassName\"]);\n        var contentStyle = {\n            paddingTop: padding,\n            paddingRight: padding,\n            paddingBottom: padding,\n            paddingLeft: padding,\n        };\n        var highlighted = highlight(value);\n        return (React.createElement(\"div\", __assign({}, rest, { style: __assign(__assign({}, styles.container), style) }),\n            React.createElement(\"textarea\", { ref: function (c) { return (_this._input = c); }, style: __assign(__assign(__assign({}, styles.editor), styles.textarea), contentStyle), className: className + (textareaClassName ? \" \".concat(textareaClassName) : ''), id: textareaId, value: value, onChange: this._handleChange, onKeyDown: this._handleKeyDown, onClick: onClick, onKeyUp: onKeyUp, onFocus: onFocus, onBlur: onBlur, disabled: disabled, form: form, maxLength: maxLength, minLength: minLength, name: name, placeholder: placeholder, readOnly: readOnly, required: required, autoFocus: autoFocus, autoCapitalize: \"off\", autoComplete: \"off\", autoCorrect: \"off\", spellCheck: false, \"data-gramm\": false }),\n            React.createElement(\"pre\", __assign({ className: preClassName, \"aria-hidden\": \"true\", style: __assign(__assign(__assign({}, styles.editor), styles.highlight), contentStyle) }, (typeof highlighted === 'string'\n                ? { dangerouslySetInnerHTML: { __html: highlighted + '<br />' } }\n                : { children: highlighted }))),\n            React.createElement(\"style\", { type: \"text/css\", dangerouslySetInnerHTML: { __html: cssText } })));\n    };\n    Editor.defaultProps = {\n        tabSize: 2,\n        insertSpaces: true,\n        ignoreTabKey: false,\n        padding: 0,\n    };\n    return Editor;\n}(React.Component));\nexports.default = Editor;\nvar styles = {\n    container: {\n        position: 'relative',\n        textAlign: 'left',\n        boxSizing: 'border-box',\n        padding: 0,\n        overflow: 'hidden',\n    },\n    textarea: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height: '100%',\n        width: '100%',\n        resize: 'none',\n        color: 'inherit',\n        overflow: 'hidden',\n        MozOsxFontSmoothing: 'grayscale',\n        WebkitFontSmoothing: 'antialiased',\n        WebkitTextFillColor: 'transparent',\n    },\n    highlight: {\n        position: 'relative',\n        pointerEvents: 'none',\n    },\n    editor: {\n        margin: 0,\n        border: 0,\n        background: 'none',\n        boxSizing: 'inherit',\n        display: 'inherit',\n        fontFamily: 'inherit',\n        fontSize: 'inherit',\n        fontStyle: 'inherit',\n        fontVariantLigatures: 'inherit',\n        fontWeight: 'inherit',\n        letterSpacing: 'inherit',\n        lineHeight: 'inherit',\n        tabSize: 'inherit',\n        textIndent: 'inherit',\n        textRendering: 'inherit',\n        textTransform: 'inherit',\n        whiteSpace: 'pre-wrap',\n        wordBreak: 'keep-all',\n        overflowWrap: 'break-word',\n    },\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}