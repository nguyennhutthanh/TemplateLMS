{"ast":null,"code":"import React from'react';import{Col,Row,Container}from'@themesberg/react-bootstrap';import Documentation from\"../../components/Documentation\";import Progress from\"../../components/Progress\";export default(function(){return/*#__PURE__*/React.createElement(\"article\",null,/*#__PURE__*/React.createElement(Container,{className:\"px-0\"},/*#__PURE__*/React.createElement(Row,{className:\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\"},/*#__PURE__*/React.createElement(Col,{className:\"d-block mb-4 mb-md-0\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"h2\"},\"Progress\"),/*#__PURE__*/React.createElement(\"p\",{className:\"mb-0\"},\"Use progress bars to indicate percentage based components.\"))),/*#__PURE__*/React.createElement(Documentation,{title:\"Example\",description:/*#__PURE__*/React.createElement(\"p\",null,\"Use the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Progress>\"),\" component to show progress bars or loaders for your app. You can set the value of the bar using the \",/*#__PURE__*/React.createElement(\"code\",null,\"value\"),\" attribute. You can also change the appearance using the \",/*#__PURE__*/React.createElement(\"code\",null,\"variant=\\\"*\\\"\"),\" attributes using the default Bootstrap color classes, such as \",/*#__PURE__*/React.createElement(\"code\",null,\"primary\"),\", \",/*#__PURE__*/React.createElement(\"code\",null,\"secondary\"),\", \",/*#__PURE__*/React.createElement(\"code\",null,\"danger\"),\" and so on.\"),scope:{Progress:Progress},imports:\"import Progress from \\\"src/components/Progress\\\";\",example:\"<Progress variant=\\\"primary\\\" label=\\\"Primary color\\\" value={25} />\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Color variations\",description:/*#__PURE__*/React.createElement(\"p\",null,\"To update the appearance of the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Progress>\"),\" component you can use the following classes for the \",/*#__PURE__*/React.createElement(\"code\",null,\"variant\"),\" attribute. You can also add a label text using the \",/*#__PURE__*/React.createElement(\"code\",null,\"label=\\\"lorem ipsum\\\"\"),\" attribute.\"),scope:{Progress:Progress},imports:\"import Progress from \\\"src/components/Progress\\\";\",example:\"<React.Fragment>\\n  <Progress variant=\\\"secondary\\\" label=\\\"Secondary color\\\" />\\n  <Progress variant=\\\"tertiary\\\" label=\\\"Tertiary color\\\" />\\n  <Progress variant=\\\"dark\\\" label=\\\"Dark color\\\" />\\n  <Progress variant=\\\"success\\\" label=\\\"Success color\\\" />\\n  <Progress variant=\\\"info\\\" label=\\\"Info color\\\" />\\n  <Progress variant=\\\"danger\\\" label=\\\"Danger color\\\" />\\n</React.Fragment>\"}),/*#__PURE__*/React.createElement(Documentation,{title:\"Sizing\",description:/*#__PURE__*/React.createElement(\"p\",null,\"You can also use one of the four available sizes for the \",/*#__PURE__*/React.createElement(\"code\",null,\"<Progress>\"),\" updating the \",/*#__PURE__*/React.createElement(\"code\",null,\"size=\\\"*\\\"\"),\" attribute.\"),scope:{Progress:Progress},imports:\"import Progress from \\\"src/components/Progress\\\";\",example:\"<React.Fragment>\\n  <Progress variant=\\\"primary\\\" label=\\\"XL Progress Bar\\\" size=\\\"xl\\\" />\\n  <Progress variant=\\\"secondary\\\" label=\\\"LG Progress Bar\\\" size=\\\"lg\\\" />\\n  <Progress variant=\\\"tertiary\\\" label=\\\"MD Progress Bar\\\" size=\\\"md\\\" />\\n  <Progress variant=\\\"info\\\" label=\\\"SM Progress Bar\\\" size=\\\"sm\\\" />\\n</React.Fragment>\"})));});","map":{"version":3,"names":["React","Col","Row","Container","Documentation","Progress"],"sources":["E:/ReactJS/project-cursus/src/pages/components/Progress.js"],"sourcesContent":["\nimport React from 'react';\nimport { Col, Row, Container } from '@themesberg/react-bootstrap';\n\nimport Documentation from \"../../components/Documentation\";\nimport Progress from \"../../components/Progress\";\n\nexport default () => (\n  <article>\n    <Container className=\"px-0\">\n      <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n        <Col className=\"d-block mb-4 mb-md-0\">\n          <h1 className=\"h2\">Progress</h1>\n          <p className=\"mb-0\">\n            Use progress bars to indicate percentage based components.\n          </p>\n        </Col>\n      </Row>\n\n      <Documentation\n        title=\"Example\"\n        description={\n          <p>Use the <code>&#x3C;Progress&#x3E;</code> component to show progress bars or loaders for your app. You can set the value of the bar using the <code>value</code> attribute. You can also change the appearance using the <code>variant=\"*\"</code> attributes using the default Bootstrap color classes, such as <code>primary</code>, <code>secondary</code>, <code>danger</code> and so on.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<Progress variant=\"primary\" label=\"Primary color\" value={25} />`}\n      />\n\n      <Documentation\n        title=\"Color variations\"\n        description={\n          <p>To update the appearance of the <code>&#x3C;Progress&#x3E;</code> component you can use the following classes for the <code>variant</code> attribute. You can also add a label text using the <code>label=\"lorem ipsum\"</code> attribute.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"secondary\" label=\"Secondary color\" />\n  <Progress variant=\"tertiary\" label=\"Tertiary color\" />\n  <Progress variant=\"dark\" label=\"Dark color\" />\n  <Progress variant=\"success\" label=\"Success color\" />\n  <Progress variant=\"info\" label=\"Info color\" />\n  <Progress variant=\"danger\" label=\"Danger color\" />\n</React.Fragment>`}\n      />\n\n      <Documentation\n        title=\"Sizing\"\n        description={\n          <p>You can also use one of the four available sizes for the <code>&#x3C;Progress&#x3E;</code> updating the <code>size=\"*\"</code> attribute.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"primary\" label=\"XL Progress Bar\" size=\"xl\" />\n  <Progress variant=\"secondary\" label=\"LG Progress Bar\" size=\"lg\" />\n  <Progress variant=\"tertiary\" label=\"MD Progress Bar\" size=\"md\" />\n  <Progress variant=\"info\" label=\"SM Progress Bar\" size=\"sm\" />\n</React.Fragment>`}\n      />\n    </Container>\n  </article>\n);\n"],"mappings":"AACA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,SAAnB,KAAoC,6BAApC,CAEA,MAAOC,cAAP,KAA0B,gCAA1B,CACA,MAAOC,SAAP,KAAqB,2BAArB,CAEA,eAAe,8BACb,gDACE,oBAAC,SAAD,EAAW,SAAS,CAAC,MAArB,eACE,oBAAC,GAAD,EAAK,SAAS,CAAC,yDAAf,eACE,oBAAC,GAAD,EAAK,SAAS,CAAC,sBAAf,eACE,0BAAI,SAAS,CAAC,IAAd,aADF,cAEE,yBAAG,SAAS,CAAC,MAAb,+DAFF,CADF,CADF,cAUE,oBAAC,aAAD,EACE,KAAK,CAAC,SADR,CAEE,WAAW,cACT,qDAAW,6CAAX,sHAAiJ,wCAAjJ,0EAA4N,gDAA5N,gFAAmT,0CAAnT,mBAAyU,4CAAzU,mBAAiW,yCAAjW,eAHJ,CAKE,KAAK,CAAE,CAAEA,QAAQ,CAARA,QAAF,CALT,CAME,OAAO,oDANT,CAOE,OAAO,sEAPT,EAVF,cAoBE,oBAAC,aAAD,EACE,KAAK,CAAC,kBADR,CAEE,WAAW,cACT,6EAAmC,6CAAnC,sEAAyH,0CAAzH,qEAAiM,wDAAjM,eAHJ,CAKE,KAAK,CAAE,CAAEA,QAAQ,CAARA,QAAF,CALT,CAME,OAAO,oDANT,CAOE,OAAO,sYAPT,EApBF,cAqCE,oBAAC,aAAD,EACE,KAAK,CAAC,QADR,CAEE,WAAW,cACT,sGAA4D,6CAA5D,+BAA2G,6CAA3G,eAHJ,CAKE,KAAK,CAAE,CAAEA,QAAQ,CAARA,QAAF,CALT,CAME,OAAO,oDANT,CAOE,OAAO,8UAPT,EArCF,CADF,CADa,EAAf"},"metadata":{},"sourceType":"module"}